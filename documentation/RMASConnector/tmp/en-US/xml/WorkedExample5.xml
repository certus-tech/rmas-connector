<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "RMASConnector.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-RMASConnector-WorkedExample5" lang="en-US">
	<title>Worked Example 5: HR to CERIF XML for project costings</title>
	 <section id="sect-RMASConnector-WorkedExample5-Section_1">
		<title>Overview</title>
		 <para>
			Worked example 5 demonstrates how data from a Human Resources (HR) database can be mapped to CERIF XML, with the intention that it can then be joined with data from pFACT in order to calculate project costings.
		</para>

	</section>
	
	 <section id="sect-RMASConnector-WorkedExample5-Section_2">
		<title>User Story</title>
		 <para>
			A project manager wishes to estimate the cost of an upcoming project. They have used pFACT to determine who will be working on the project and the project timespan. This information has already been exported as CERIF XML. They now need to obtain salary information from HR in order to calculate the costings. Generating this information in CERIF XML format facilitates its merge with the pFACT data.
		</para>
		 <para>
			The project manager starts PDI and opens the HR To CERIF XML job. They ensure that the job is configured to access their HR database, and write a query to run against that database to obtain the required fields. They ensure that the extracted fields are named as required. They then run the job, which generates a CERIF XML file containing their HR data.
		</para>

	</section>
	
	 <section id="sect-RMASConnector-WorkedExample5-Section_3">
		<title>Structure of the Example</title>
		 <para>
			Worked example 5 consists of three PDI components: a job (WorkedExample5.kjb) and two transformations (HRDatabaseInput.ktr and CERIFXMLOutput.ktr). These are located in the WorkedExample5 subdirectory of the PDI repository.
		</para>
		 <para>
			Worked example 5 may be used in the context of the <emphasis>Spoon</emphasis> graphical front end to PDI, by loading the job and executing it directly. It may also be executed from a command line.
		</para>
		 <section id="sect-RMASConnector-WorkedExample5-Section_3_1">
			<title>Parameters</title>
			 <para>
				The following parameters are used to configure the <emphasis>WorkedExample5</emphasis> job. They can be set in order to tailor the example to be specific to your local HR:
			</para>
			 <table id="sect-RMASConnector-WorkedExample5-Section_3_1_table">
				<caption></caption> <thead>
					<tr>
						<td>
							Parameter
						</td>
						 <td>
							Description
						</td>

					</tr>

				</thead>
				 <tbody>
					<tr>
						<td>
							DatabaseClass
						</td>
						 <td>
							The database driver class name.
						</td>

					</tr>
					 <tr>
						<td>
							DatabaseUrl
						</td>
						 <td>
							The URL for the database connection.
						</td>

					</tr>
					 <tr>
						<td>
							DatabaseUsername
						</td>
						 <td>
							The username for accessing the database.
						</td>

					</tr>
					 <tr>
						<td>
							DatabasePassword
						</td>
						 <td>
							The password for accessing the database.
						</td>

					</tr>
					 <tr>
						<td>
							SQLQuery
						</td>
						 <td>
							The query to execute on the database.
						</td>

					</tr>
					 <tr>
						<td>
							output.file
						</td>
						 <td>
							The path to the file which is generated by the process. If the file does not exist, it will be created automatically.
						</td>

					</tr>
					 <tr>
						<td>
							project.dir
						</td>
						 <td>
							The root directory for the project.
						</td>

					</tr>

				</tbody>

			</table>

		</section>
		

	</section>
	
	 <section id="sect-RMASConnector-WorkedExample5-Section_4">
		<title>Running the job from Spoon</title>
		 <para>
			This section describes how to configure and/or run the job from the Spoon visual editor.
		</para>
		 <section id="sect-RMASConnector-WorkedExample5-Section_4_1">
			<title>Running the job from Spoon</title>
			 <figure id="sect-RMASConnector-WorkedExample5-Section_4_1_figure">
				<title>The worked example 5 job</title>
				 <mediaobject>
					<imageobject condition="web">
						<imagedata align="center" fileref="images/WorkedExample5/Example5Job.png" format="PNG" scalefit="0" width="444" />
					</imageobject>
					 <textobject>
						<phrase>Worked Example 5 Job</phrase>
					</textobject>

				</mediaobject>

			</figure>
			 <para>
				Worked example 5 uses a <emphasis>Read HR Database</emphasis> transformation to extract data from the HR database and map it to a CERIF-based Common Data Model (CDM). The CDM data is then passed to a further transformation, <emphasis>Write to CERIF XML File</emphasis>, which serialises it to CERIF XML format and validates it against the CERIF schema. We consider each transformation below.
			</para>

		</section>
		
		 <section id="sect-RMASConnector-WorkedExample5-Section_4_2">
			<title>Read HR Database</title>
			 <figure id="sect-RMASConnector-WorkedExample5-Section_4_2_figure">
				<title>The read HR database transformation</title>
				 <mediaobject>
					<imageobject condition="web">
						<imagedata align="center" fileref="images/WorkedExample5/Example5QueryHR.png" format="PNG" scalefit="0" width="444" />
					</imageobject>
					 <textobject>
						<phrase>Read HR database transformation</phrase>
					</textobject>

				</mediaobject>

			</figure>
			 <para>
				This transformation runs a query against a database which is specified by setting the required parameters at the job level (see above). A JavaScript step is used to convert any dates from a dd/MM/yyyy format into the xs:datetime format required by CERIF. The <emphasis>Map to CDM</emphasis> step is then used to remove any irrelevant fields and to map the remaining ones to their equivalent CDM fields. Finally, the data is made available to the <emphasis>Write to CERIF XML</emphasis> transformation step.
			</para>

		</section>
		
		 <section id="sect-RMASConnector-WorkedExample5-Section_4_3">
			<title>Write to CERIF XML</title>
			 <figure id="sect-RMASConnector-WorkedExample5-Section_4_3_figure">
				<title>The write to CERIF XML transformation</title>
				 <mediaobject>
					<imageobject condition="web">
						<imagedata align="center" fileref="images/WorkedExample5/Example5WriteToCerif.png" format="PNG" scalefit="0" width="444" />
					</imageobject>
					 <textobject>
						<phrase>Write to CERIF XML transformation</phrase>
					</textobject>

				</mediaobject>

			</figure>
			 <para>
				This transformation takes the data made available from the <emphasis>Read HR Database</emphasis> transformation and serialises it to CERIF XML. The <emphasis>Convert CDM to CERIF</emphasis> step also validates the generated XML against the CERIF schema.
			</para>

		</section>
		

	</section>
	
	 <section id="sect-RMASConnector-WorkedExample5-Section_5">
		<title>Running the job from the command line</title>
		 <para>
			You can also run the job from the command line, either as the downloaded worked example or after configuring and saving it using Spoon. The following shows how to run the command from both a linux environment and a Windows environment, using the <emphasis>Kitchen</emphasis> tool which is provided with PDI.
		</para>
		 <section id="sect-RMASConnector-WorkedExample5-Section_5_1">
			<title>Running the job from a Linux command line</title>
			 <para>
				Navigate to the RMAS/kettle directory: 
<programlisting>cd RMAS/kettle</programlisting>
			</para>
			 <para>
				Ensure that the kitchen.sh script is executable: 
<programlisting>chmod u+x kitchen.sh</programlisting>
			</para>
			 <para>
				Run the job using the following command. Note that the quote marks around the repository name are optional, but they <emphasis>must</emphasis> be included if the repository name contains whitespace: 
<programlisting>./kitchen.sh -rep=&#34;RMASConnector&#34; -job=WorkedExample5/WorkedExample5</programlisting>
			</para>

		</section>
		
		 <section id="sect-RMASConnector-WorkedExample5-Section_5_2">
			<title>Running the job from a Windows command line</title>
			 <para>
				Navigate to the RMAS/kettle directory: 
<programlisting>cd RMAS\kettle</programlisting>
			</para>
			 <para>
				Run the job using the following command. Note that the quote marks around the repository name are optional, but they <emphasis>must</emphasis> be included if the repository name contains whitespace: 
<programlisting>Kitchen.bat /rep:&#34;RMASConnector&#34; /job:WorkedExample5/WorkedExample5</programlisting>
			</para>

		</section>
		

	</section>
	
	 <section id="sect-RMASConnector-WorkedExample5-Section_6">
		<title>A note on configuring the worked example</title>
		 <para>
			This example requires a connection to a Human Resources database. This can be configured by ensuring that all the database parameters are set at the job level. Default values for these parameters have been entered for the sample database which is provided as part of the example (RMAS/exampledata/WorkedExample5/WorkedExample5.script). When configuring your own database, you will need to ensure that the <emphasis>Map to CDM</emphasis> step in the <emphasis>Read HR Database</emphasis> transformation maps the column names in the database to the appropriate CDM fields.
		</para>
		 <para>
			On running this job, a CERIF XML representation of the data extracted from the database is created in the location specified by the output.file parameter.
		</para>

	</section>

</chapter>

